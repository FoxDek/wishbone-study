/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --font-weight-extralight: 200;
    --font-weight-medium: 500;
    --tracking-widest: 0.1em;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .z-0 {
    z-index: 0;
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-0\.5 {
    height: calc(var(--spacing) * 0.5);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-120 {
    height: calc(var(--spacing) * 120);
  }
  .h-auto {
    height: auto;
  }
  .h-full {
    height: 100%;
  }
  .h-screen {
    height: 100vh;
  }
  .min-h-\[70vh\] {
    min-height: 70vh;
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-30 {
    width: calc(var(--spacing) * 30);
  }
  .w-48 {
    width: calc(var(--spacing) * 48);
  }
  .w-\[50\%\] {
    width: 50%;
  }
  .w-\[60\%\] {
    width: 60%;
  }
  .w-full {
    width: 100%;
  }
  .max-w-72 {
    max-width: calc(var(--spacing) * 72);
  }
  .max-w-80 {
    max-width: calc(var(--spacing) * 80);
  }
  .max-w-100 {
    max-width: calc(var(--spacing) * 100);
  }
  .max-w-120 {
    max-width: calc(var(--spacing) * 120);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-0 {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1 {
    --tw-translate-y: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\.5 {
    --tw-translate-y: calc(var(--spacing) * -1.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-1 {
    --tw-translate-y: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-1\.5 {
    --tw-translate-y: calc(var(--spacing) * 1.5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-rotate-45 {
    rotate: calc(45deg * -1);
  }
  .rotate-45 {
    rotate: 45deg;
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .motion-scale-in {
    --motion-origin-scale-x: 50%;
    --motion-origin-scale-y: 50%;
    --motion-scale-in-animation: motion-scale-in calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
    animation: var(--motion-all-loop-and-enter-animations);
  }
  .motion-scale-out {
    --motion-end-scale-x: 50%;
    --motion-end-scale-y: 50%;
    --motion-scale-out-animation: motion-scale-out calc(var(--motion-scale-duration) * var(--motion-scale-perceptual-duration-multiplier)) var(--motion-scale-timing) var(--motion-scale-delay) both;
    animation: var(--motion-all-exit-animations);
  }
  .motion-opacity-in {
    --motion-origin-opacity: 0;
    --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
    animation: var(--motion-all-loop-and-enter-animations);
  }
  .motion-opacity-out {
    --motion-end-opacity: 0;
    --motion-opacity-out-animation: motion-opacity-out calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
    animation: var(--motion-all-exit-animations);
  }
  .motion-rotate-in {
    --motion-origin-rotate: 12deg;
    --motion-rotate-in-animation: motion-rotate-in calc(var(--motion-rotate-duration) * var(--motion-rotate-perceptual-duration-multiplier)) var(--motion-rotate-timing) var(--motion-rotate-delay) both;
    animation: var(--motion-all-loop-and-enter-animations);
  }
  .motion-rotate-out {
    --motion-end-rotate: 12deg;
    --motion-rotate-out-animation: motion-rotate-out calc(var(--motion-rotate-duration) * var(--motion-rotate-perceptual-duration-multiplier)) var(--motion-rotate-timing) var(--motion-rotate-delay) both;
    animation: var(--motion-all-exit-animations);
  }
  .resize {
    resize: both;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  .gap-20 {
    gap: calc(var(--spacing) * 20);
  }
  .self-start {
    align-self: flex-start;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-4 {
    border-style: var(--tw-border-style);
    border-width: 4px;
  }
  .border-\[\#CEC4BC\] {
    border-color: #CEC4BC;
  }
  .bg-\[\#403E3B\] {
    background-color: #403E3B;
  }
  .bg-\[\#CEC4BC\] {
    background-color: #CEC4BC;
  }
  .bg-\[\#F7F7F7\] {
    background-color: #F7F7F7;
  }
  .bg-\[var\(--text-color-secondary\)\] {
    background-color: var(--text-color-secondary);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/60 {
    background-color: color-mix(in srgb, #000 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 60%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/50 {
    background-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .bg-white\/70 {
    background-color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .bg-\[url\(\/images\/wishbone-card-cover-1\.png\)\] {
    background-image: url(/images/wishbone-card-cover-1.png);
  }
  .bg-\[url\(\/images\/wishbone-card-cover-2\.png\)\] {
    background-image: url(/images/wishbone-card-cover-2.png);
  }
  .bg-\[url\(\/images\/wishbone-card-cover-3\.png\)\] {
    background-image: url(/images/wishbone-card-cover-3.png);
  }
  .bg-\[url\(\/images\/wishbone-cover-1\.png\)\] {
    background-image: url(/images/wishbone-cover-1.png);
  }
  .bg-\[url\(\/images\/wishbone-cover-2\.png\)\] {
    background-image: url(/images/wishbone-cover-2.png);
  }
  .bg-\[url\(\/images\/wishbone-cover-3\.png\)\] {
    background-image: url(/images/wishbone-cover-3.png);
  }
  .bg-\[url\(\/images\/wishbone-cover-4\.png\)\] {
    background-image: url(/images/wishbone-cover-4.png);
  }
  .bg-cover {
    background-size: cover;
  }
  .bg-center {
    background-position: center;
  }
  .bg-no-repeat {
    background-repeat: no-repeat;
  }
  .fill-\[var\(--text-color-primary\)\] {
    fill: var(--text-color-primary);
  }
  .object-cover {
    object-fit: cover;
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-20 {
    padding-inline: calc(var(--spacing) * 20);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-14 {
    padding-block: calc(var(--spacing) * 14);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .py-28 {
    padding-block: calc(var(--spacing) * 28);
  }
  .py-32 {
    padding-block: calc(var(--spacing) * 32);
  }
  .pt-20 {
    padding-top: calc(var(--spacing) * 20);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .font-extralight {
    --tw-font-weight: var(--font-weight-extralight);
    font-weight: var(--font-weight-extralight);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .tracking-widest {
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .text-\[\#ECE7E4\] {
    color: #ECE7E4;
  }
  .text-\[var\(--text-color-secondary\)\] {
    color: var(--text-color-secondary);
  }
  .text-\[var\(--text-color-tertiary\)\] {
    color: var(--text-color-tertiary);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .group-hover\:fill-\[\#1DA1F2\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: #1DA1F2;
      }
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:bg-\[var\(--link-hover\)\] {
    &:hover {
      @media (hover: hover) {
        background-color: var(--link-hover);
      }
    }
  }
  .hover\:text-\[var\(--link-hover\)\] {
    &:hover {
      @media (hover: hover) {
        color: var(--link-hover);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .sm\:text-5xl {
    @media (width >= 40rem) {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  .md\:absolute {
    @media (width >= 48rem) {
      position: absolute;
    }
  }
  .md\:inset-0 {
    @media (width >= 48rem) {
      inset: calc(var(--spacing) * 0);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:h-5 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 5);
    }
  }
  .md\:w-25 {
    @media (width >= 48rem) {
      width: calc(var(--spacing) * 25);
    }
  }
  .md\:w-\[50\%\] {
    @media (width >= 48rem) {
      width: 50%;
    }
  }
  .md\:max-w-lg {
    @media (width >= 48rem) {
      max-width: var(--container-lg);
    }
  }
  .md\:max-w-xl {
    @media (width >= 48rem) {
      max-width: var(--container-xl);
    }
  }
  .md\:translate-y-full {
    @media (width >= 48rem) {
      --tw-translate-y: 100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:transform {
    @media (width >= 48rem) {
      transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
    }
  }
  .md\:grid-cols-2 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:items-end {
    @media (width >= 48rem) {
      align-items: flex-end;
    }
  }
  .md\:items-start {
    @media (width >= 48rem) {
      align-items: flex-start;
    }
  }
  .md\:justify-between {
    @media (width >= 48rem) {
      justify-content: space-between;
    }
  }
  .md\:justify-center {
    @media (width >= 48rem) {
      justify-content: center;
    }
  }
  .md\:gap-6 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .md\:gap-20 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 20);
    }
  }
  .md\:gap-36 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 36);
    }
  }
  .md\:gap-40 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 40);
    }
  }
  .md\:gap-x-32 {
    @media (width >= 48rem) {
      column-gap: calc(var(--spacing) * 32);
    }
  }
  .md\:bg-\[\#ECE7E4\] {
    @media (width >= 48rem) {
      background-color: #ECE7E4;
    }
  }
  .md\:bg-transparent {
    @media (width >= 48rem) {
      background-color: transparent;
    }
  }
  .md\:bg-none {
    @media (width >= 48rem) {
      background-image: none;
    }
  }
  .md\:p-12 {
    @media (width >= 48rem) {
      padding: calc(var(--spacing) * 12);
    }
  }
  .md\:px-16 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 16);
    }
  }
  .md\:text-left {
    @media (width >= 48rem) {
      text-align: left;
    }
  }
  .md\:text-base {
    @media (width >= 48rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .md\:text-sm {
    @media (width >= 48rem) {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .md\:text-nowrap {
    @media (width >= 48rem) {
      text-wrap: nowrap;
    }
  }
  .md\:text-\[var\(--text-color-primary\)\] {
    @media (width >= 48rem) {
      color: var(--text-color-primary);
    }
  }
  .md\:text-\[var\(--text-color-tertiary\)\] {
    @media (width >= 48rem) {
      color: var(--text-color-tertiary);
    }
  }
  .md\:transition-all {
    @media (width >= 48rem) {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .md\:duration-500 {
    @media (width >= 48rem) {
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
  }
  .md\:group-hover\:translate-y-0 {
    @media (width >= 48rem) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          --tw-translate-y: calc(var(--spacing) * 0);
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:hidden {
    @media (width >= 64rem) {
      display: none;
    }
  }
  .lg\:flex-row {
    @media (width >= 64rem) {
      flex-direction: row;
    }
  }
  .lg\:items-center {
    @media (width >= 64rem) {
      align-items: center;
    }
  }
  .lg\:gap-8 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .lg\:px-28 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 28);
    }
  }
  .lg\:px-40 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 40);
    }
  }
  .xl\:px-40 {
    @media (width >= 80rem) {
      padding-inline: calc(var(--spacing) * 40);
    }
  }
  .xl\:text-7xl {
    @media (width >= 80rem) {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  .intersect\:motion-preset-slide-up {
    &:not([no-intersect]) {
      --motion-origin-translate-y: 25%;
      --motion-origin-opacity: 0;
      --motion-opacity-in-animation: motion-opacity-in calc(var(--motion-opacity-duration) * var(--motion-opacity-perceptual-duration-multiplier)) var(--motion-opacity-timing) var(--motion-opacity-delay) both;
      --motion-translate-in-animation: motion-translate-in calc(var(--motion-translate-duration) * var(--motion-translate-perceptual-duration-multiplier)) var(--motion-translate-timing) var(--motion-translate-delay) both;
      animation: var(--motion-all-loop-and-enter-animations);
    }
  }
  .intersect\:motion-delay-0 {
    &:not([no-intersect]) {
      --motion-delay: 0s;
    }
  }
  .intersect\:motion-delay-100 {
    &:not([no-intersect]) {
      --motion-delay: 100ms;
    }
  }
  .intersect\:motion-delay-200 {
    &:not([no-intersect]) {
      --motion-delay: 200ms;
    }
  }
  .intersect\:motion-delay-300 {
    &:not([no-intersect]) {
      --motion-delay: 300ms;
    }
  }
  .intersect\:motion-delay-400 {
    &:not([no-intersect]) {
      --motion-delay: 400ms;
    }
  }
  .intersect\:motion-delay-500 {
    &:not([no-intersect]) {
      --motion-delay: 500ms;
    }
  }
  .intersect\:motion-duration-2000 {
    &:not([no-intersect]) {
      --motion-duration: 2000ms;
    }
  }
}
:root {
  --link-hover: #5FA8FB;
  --text-color-primary: #1B1A1A;
  --text-color-secondary: #403E3B;
  --text-color-tertiary: #645C55;
}
@layer base {
  *, *::before, *::after {
    box-sizing: border-box;
  }
  html, body {
    margin: 0;
    padding: 0;
    height: 100%;
    font-family: Poppins, sans-serif;
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    background-color: #fff;
    color: var(--text-color-primary);
    user-select: none;
  }
  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }
  input, button, textarea, select {
    font: inherit;
  }
  a {
    color: inherit;
    text-decoration: none;
  }
  ul[role='list'], ol[role='list'] {
    list-style: none;
  }
  button {
    background: none;
    border: none;
    cursor: pointer;
  }
  table {
    border-collapse: collapse;
    width: 100%;
  }
  h1, h2, h3, h4, h5, h6, p {
    margin: 0;
  }
}
@layer base {
  :root {
    --motion-default-timing: cubic-bezier(.165, .84, .44, 1);
    --motion-bounce: linear(0, 0.004, 0.016, 0.035, 0.063, 0.098, 0.141 13.6%, 0.25, 0.391, 0.563, 0.765,1, 0.891 40.9%, 0.848, 0.813, 0.785, 0.766, 0.754, 0.75, 0.754, 0.766, 0.785,0.813, 0.848, 0.891 68.2%, 1 72.7%, 0.973, 0.953, 0.941, 0.938, 0.941, 0.953,0.973, 1, 0.988, 0.984, 0.988, 1);
    --motion-spring-smooth: linear(0, 0.001 0.44%, 0.0045 0.94%, 0.0195 2.03%, 0.0446 3.19%, 0.0811 4.5%, 0.1598 6.82%, 0.3685 12.34%, 0.4693 15.17%, 0.5663, 0.6498 21.27%, 0.7215 24.39%, 0.7532 25.98%, 0.7829 27.65%, 0.8105, 0.8349 31.14%, 0.8573 32.95%, 0.8776 34.84%, 0.8964 36.87%, 0.9136 39.05%, 0.929 41.37%, 0.9421 43.77%, 0.9537 46.38%, 0.9636 49.14%, 0.9789 55.31%, 0.9888 62.35%, 0.9949 71.06%, 0.9982 82.52%, 0.9997 99.94%);
    --motion-spring-snappy: linear(0, 0.0014, 0.0053 1.02%, 0.0126, 0.0227 2.18%, 0.0517 3.41%, 0.094 4.79%, 0.1865 7.26%, 0.4182 12.77%, 0.5246 15.46%, 0.6249, 0.7112, 0.7831 23.95%, 0.8146 25.4%, 0.844, 0.8699 28.45%, 0.8935, 0.9139 31.64%, 0.932, 0.9473, 0.9601 36.65%, 0.9714 38.47%, 0.9808 40.35%, 0.9948 44.49%, 1.0031 49.43%, 1.0057 53.35%, 1.0063 58.14%, 1.0014 80.78%, 1.0001 99.94%);
    --motion-spring-bouncy: linear(0, 0.0018, 0.0069, 0.0151 1.74%, 0.0277 2.4%, 0.062 3.7%, 0.1115 5.15%, 0.2211 7.77%, 0.4778 13.21%, 0.5912 15.75%, 0.6987 18.44%, 0.7862 20.98%, 0.861 23.59%, 0.8926, 0.9205, 0.945 27.51%, 0.9671 28.89%, 0.9868, 1.003 31.79%, 1.0224 34.11%, 1.0358 36.58%, 1.0436 39.27%, 1.046 42.31%, 1.0446 44.71%, 1.0406 47.47%, 1.0118 61.84%, 1.0027 69.53%, 0.9981 80.49%, 0.9991 99.94%);
    --motion-spring-bouncier: linear(0, 0.0023, 0.0088, 0.0194 1.59%, 0.035 2.17%, 0.078 3.33%, 0.1415 4.64%, 0.2054 5.75%, 0.2821 6.95%, 0.5912 11.45%, 0.7205 13.43%, 0.8393 15.45%, 0.936 17.39%, 0.9778, 1.015, 1.0477, 1.0759, 1.0998 22.22%, 1.1203, 1.1364, 1.1484 25.26%, 1.1586 26.61%, 1.1629 28.06%, 1.1613 29.56%, 1.1537 31.2%, 1.1434 32.6%, 1.1288 34.19%, 1.0508 41.29%, 1.0174 44.87%, 1.0025 46.89%, 0.9911 48.87%, 0.9826 50.9%, 0.9769 53.03%, 0.9735 56.02%, 0.9748 59.45%, 0.9964 72.64%, 1.0031 79.69%, 1.0042 86.83%, 1.0008 99.97%);
    --motion-spring-bounciest: linear(0, 0.0032, 0.0131, 0.0294, 0.0524, 0.0824, 0.1192 1.54%, 0.2134 2.11%, 0.3102 2.59%, 0.4297 3.13%, 0.8732 4.95%, 1.0373, 1.1827 6.36%, 1.2972 7.01%, 1.3444, 1.3859, 1.4215, 1.4504, 1.4735, 1.4908, 1.5024, 1.5084 9.5%, 1.5091, 1.5061, 1.4993, 1.4886, 1.4745, 1.4565 11.11%, 1.4082 11.7%, 1.3585 12.2%, 1.295 12.77%, 1.0623 14.64%, 0.9773, 0.9031 16.08%, 0.8449 16.73%, 0.8014, 0.7701 17.95%, 0.7587, 0.7501, 0.7443, 0.7412 19.16%, 0.7421 19.68%, 0.7508 20.21%, 0.7672 20.77%, 0.7917 21.37%, 0.8169 21.87%, 0.8492 22.43%, 0.9681 24.32%, 1.0114, 1.0492 25.75%, 1.0789 26.41%, 1.1008, 1.1167, 1.1271, 1.1317 28.81%, 1.1314, 1.1271 29.87%, 1.1189 30.43%, 1.1063 31.03%, 1.0769 32.11%, 0.9941 34.72%, 0.9748 35.43%, 0.9597 36.09%, 0.9487, 0.9407, 0.9355, 0.933 38.46%, 0.9344 39.38%, 0.9421 40.38%, 0.9566 41.5%, 0.9989 44.12%, 1.0161 45.37%, 1.029 46.75%, 1.0341 48.1%, 1.0335 49.04%, 1.0295 50.05%, 1.0221 51.18%, 0.992 55.02%, 0.9854 56.38%, 0.9827 57.72%, 0.985 59.73%, 1.004 64.67%, 1.0088 67.34%, 1.0076 69.42%, 0.9981 74.28%, 0.9956 76.85%, 0.9961 79.06%, 1.0023 86.46%, 0.999 95.22%, 0.9994 100%);
  }
  * {
    --motion-origin-scale-x: 100%;
    --motion-origin-scale-y: 100%;
    --motion-origin-translate-x: 0%;
    --motion-origin-translate-y: 0%;
    --motion-origin-rotate: 0deg;
    --motion-origin-blur: 0px;
    --motion-origin-grayscale: 0%;
    --motion-origin-opacity: 100%;
    --motion-origin-background-color: ;
    --motion-origin-text-color: ;
    --motion-end-scale-x: 100%;
    --motion-end-scale-y: 100%;
    --motion-end-translate-x: 0%;
    --motion-end-translate-y: 0%;
    --motion-end-rotate: 0deg;
    --motion-end-blur: 0px;
    --motion-end-grayscale: 0%;
    --motion-end-opacity: 100%;
    --motion-end-background-color: ;
    --motion-end-text-color: ;
    --motion-loop-scale-x: 100%;
    --motion-loop-scale-y: 100%;
    --motion-loop-translate-x: 0%;
    --motion-loop-translate-y: 0%;
    --motion-loop-rotate: 0deg;
    --motion-loop-blur: 0px;
    --motion-loop-grayscale: 0%;
    --motion-loop-opacity: 100%;
    --motion-loop-background-color: ;
    --motion-loop-text-color: ;
    --motion-duration: 700ms;
    --motion-timing: var(--motion-default-timing);
    --motion-perceptual-duration-multiplier: 1;
    --motion-delay: 0ms;
    --motion-loop-count: infinite;
    --motion-scale-duration: var(--motion-duration);
    --motion-scale-timing: var(--motion-timing);
    --motion-scale-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-scale-delay: var(--motion-delay);
    --motion-scale-loop-count: var(--motion-loop-count);
    --motion-translate-duration: var(--motion-duration);
    --motion-translate-timing: var(--motion-timing);
    --motion-translate-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-translate-delay: var(--motion-delay);
    --motion-translate-loop-count: var(--motion-loop-count);
    --motion-rotate-duration: var(--motion-duration);
    --motion-rotate-timing: var(--motion-timing);
    --motion-rotate-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-rotate-delay: var(--motion-delay);
    --motion-rotate-loop-count: var(--motion-loop-count);
    --motion-filter-duration: var(--motion-duration);
    --motion-filter-timing: var(--motion-timing);
    --motion-filter-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-filter-delay: var(--motion-delay);
    --motion-filter-loop-count: var(--motion-loop-count);
    --motion-opacity-duration: var(--motion-duration);
    --motion-opacity-timing: var(--motion-timing);
    --motion-opacity-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-opacity-delay: var(--motion-delay);
    --motion-opacity-loop-count: var(--motion-loop-count);
    --motion-background-color-duration: var(--motion-duration);
    --motion-background-color-timing: var(--motion-timing);
    --motion-background-color-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-background-color-delay: var(--motion-delay);
    --motion-background-color-loop-count: var(--motion-loop-count);
    --motion-text-color-duration: var(--motion-duration);
    --motion-text-color-timing: var(--motion-timing);
    --motion-text-color-perceptual-duration-multiplier: var(--motion-perceptual-duration-multiplier);
    --motion-text-color-delay: var(--motion-delay);
    --motion-text-color-loop-count: var(--motion-loop-count);
    --motion-scale-in-animation: none;
    --motion-translate-in-animation: none;
    --motion-rotate-in-animation: none;
    --motion-filter-in-animation: none;
    --motion-opacity-in-animation: none;
    --motion-background-color-in-animation: none;
    --motion-text-color-in-animation: none;
    --motion-scale-out-animation: none;
    --motion-translate-out-animation: none;
    --motion-rotate-out-animation: none;
    --motion-filter-out-animation: none;
    --motion-opacity-out-animation: none;
    --motion-background-color-out-animation: none;
    --motion-text-color-out-animation: none;
    --motion-scale-loop-animation: none;
    --motion-translate-loop-animation: none;
    --motion-rotate-loop-animation: none;
    --motion-filter-loop-animation: none;
    --motion-opacity-loop-animation: none;
    --motion-background-color-loop-animation: none;
    --motion-text-color-loop-animation: none;
    --motion-all-enter-animations: var(--motion-scale-in-animation), var(--motion-translate-in-animation), var(--motion-rotate-in-animation), var(--motion-filter-in-animation), var(--motion-opacity-in-animation), var(--motion-background-color-in-animation), var(--motion-text-color-in-animation);
    --motion-all-exit-animations: var(--motion-scale-out-animation), var(--motion-translate-out-animation), var(--motion-rotate-out-animation), var(--motion-filter-out-animation), var(--motion-opacity-out-animation), var(--motion-background-color-out-animation), var(--motion-text-color-out-animation);
    --motion-all-loop-animations: var(--motion-scale-loop-animation), var(--motion-translate-loop-animation), var(--motion-rotate-loop-animation), var(--motion-filter-loop-animation), var(--motion-opacity-loop-animation), var(--motion-background-color-loop-animation), var(--motion-text-color-loop-animation);
    --motion-all-loop-and-enter-animations: var(--motion-all-loop-animations), var(--motion-all-enter-animations);
  }
}
@layer base {
  @media screen and (prefers-reduced-motion: no-preference) {
    @keyframes motion-scale-in {
      0% {
        scale: var(--motion-origin-scale-x) var(--motion-origin-scale-y);
      }
      100% {
        scale: 1 1;
      }
    }
    @keyframes motion-scale-out {
      0% {
        scale: 1 1;
      }
      100% {
        scale: var(--motion-end-scale-x) var(--motion-end-scale-y);
      }
    }
    @keyframes motion-scale-loop-mirror {
      0%, 100% {
        scale: 1 1;
      }
      50% {
        scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
      }
    }
    @keyframes motion-scale-loop-reset {
      0% {
        scale: 1 1;
      }
      100% {
        scale: var(--motion-loop-scale-x) var(--motion-loop-scale-y);
      }
    }
    @keyframes motion-translate-in {
      0% {
        translate: var(--motion-origin-translate-x) var(--motion-origin-translate-y);
      }
      100% {
        translate: 0 0;
      }
    }
    @keyframes motion-translate-out {
      0% {
        translate: 0 0;
      }
      100% {
        translate: var(--motion-end-translate-x) var(--motion-end-translate-y);
      }
    }
    @keyframes motion-translate-loop-mirror {
      0%, 100% {
        translate: 0 0;
      }
      50% {
        translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
      }
    }
    @keyframes motion-translate-loop-reset {
      0% {
        translate: 0 0;
      }
      100% {
        translate: var(--motion-loop-translate-x) var(--motion-loop-translate-y);
      }
    }
    @keyframes motion-rotate-in {
      0% {
        rotate: var(--motion-origin-rotate);
      }
      100% {
        rotate: 0;
      }
    }
    @keyframes motion-rotate-out {
      0% {
        rotate: 0;
      }
      100% {
        rotate: var(--motion-end-rotate);
      }
    }
    @keyframes motion-rotate-loop-mirror {
      0%, 100% {
        rotate: 0deg;
      }
      50% {
        rotate: var(--motion-loop-rotate);
      }
    }
    @keyframes motion-rotate-loop-reset {
      100% {
        rotate: var(--motion-loop-rotate);
      }
    }
  }
  @keyframes motion-filter-in {
    0% {
      filter: blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale));
    }
    100% {
      filter: blur(0) grayscale(0);
    }
  }
  @keyframes motion-filter-out {
    0% {
      filter: blur(0) grayscale(0);
    }
    100% {
      filter: blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale));
    }
  }
  @keyframes motion-filter-loop-mirror {
    0%, 100% {
      filter: blur(0) grayscale(0);
    }
    50% {
      filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
    }
  }
  @keyframes motion-filter-loop-reset {
    0% {
      filter: blur(0) grayscale(0);
    }
    100% {
      filter: blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale));
    }
  }
  @keyframes motion-opacity-in {
    0% {
      opacity: var(--motion-origin-opacity);
    }
  }
  @keyframes motion-opacity-out {
    100% {
      opacity: var(--motion-end-opacity);
    }
  }
  @keyframes motion-opacity-loop-mirror {
    50% {
      opacity: var(--motion-loop-opacity);
    }
  }
  @keyframes motion-opacity-loop-reset {
    100% {
      opacity: var(--motion-loop-opacity);
    }
  }
  @keyframes motion-background-color-in {
    0% {
      background-color: var(--motion-origin-background-color);
    }
  }
  @keyframes motion-background-color-out {
    100% {
      background-color: var(--motion-end-background-color);
    }
  }
  @keyframes motion-background-color-loop-mirror {
    50% {
      background-color: var(--motion-loop-background-color);
    }
  }
  @keyframes motion-background-color-loop-reset {
    100% {
      background-color: var(--motion-loop-background-color);
    }
  }
  @keyframes motion-text-color-in {
    0% {
      color: var(--motion-origin-text-color);
    }
  }
  @keyframes motion-text-color-out {
    100% {
      color: var(--motion-end-text-color);
    }
  }
  @keyframes motion-text-color-loop-mirror {
    50% {
      color: var(--motion-loop-text-color);
    }
  }
  @keyframes motion-text-color-loop-reset {
    100% {
      color: var(--motion-loop-text-color);
    }
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: rotateX(0);
      --tw-rotate-y: rotateY(0);
      --tw-rotate-z: rotateZ(0);
      --tw-skew-x: skewX(0);
      --tw-skew-y: skewY(0);
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
